{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0  """\
Donato, Brandon\
bdonato1@binghamton.edu\
CS 110 - B57\
Jia Yang\
Assignment7Ex1\
"""\
\
"""\
Analysis:\
\
Write a program that repeatedly encrypts or decrypts a message given the\
operation to perform and either the rotation key (when encrypting) or the\
rotation key that was used to encrypt (in the case of decrypting)\
\
Output to monitor:\
  newMessage (str)\
\
Input from keyboard:\
  message (str)\
  operation (str) - 'E', 'e', 'D', or 'd'\
  rotationKey(int)\
\
Tasks allocated to functions:\
  operationValidated() - simple Predicate function\
  rotationKeyValidated() - simple Predicate function\
  convertRotationKey()\
  keepInBounds()\
  processMessage()\
"""    \
\
#Initialize constants ---------------------------------------------------------\
\
OPERATIONS = "ed"\
ENCRYPT = 1\
DECRYPT = -1\
\
# Min and limit ordinals of printable ASCII and total printable ASCII\
# characters\
PRINTABLE_ASCII_MIN = 32\
PRINTABLE_ASCII_LIMIT = 127\
TOTAL_PRINTABLE_ASCII_CHARACTERS = 95\
\
# Allowable rotation key prefixes\
KEY_PREFIX = "-"\
\
# Functions ------------------------------------------------------------------\
\
# Check that requested operation is valid\
# param opStr (str) - operation requested\
# invoke len()\
# invoke str.lower()\
# return  True when valid, False otherwise (bool)\
def operationValidated(opStr):\
  return len(opStr) == 1 and opStr.lower() in OPERATIONS\
\
\
# Check that rotation key is of form <digits> or -<digits>\
# param rotationKeyStr (str)\
# invoke str.isdigit() \
# returns:  True when valid, False otherwise (bool)\
def rotationKeyValidated(rotationKeyStr):\
  if rotationKeyStr[0] == KEY_PREFIX:\
    rotationKeyStr = rotationKeyStr[1:]\
  return rotationKeyStr.isdigit() and\\\
         int(rotationKeyStr) > 0\
\
# Convert rotation key to value usable for requested operation\
# param  op (str) - operation requested \
# param  rotationKeyStr (str)\
# invoke int()\
# return encryption or decryption rotation key (int)\
def convertRotationKey(opStr, rotationKeyStr):\
  if opStr == 'e' or opStr == 'E':\
    rotationKeyInt = ENCRYPT * int(rotationKeyStr)\
  else:\
    rotationKeyInt = DECRYPT * int(rotationKeyStr)\
    #print(rotationKeyInt)\
  return rotationKeyInt\
\
# Perform string modulus operation to prevent processed character \
# from going out of bounds\
# param ordinal (int)\
# returns adjusted ordinal of new character (int)\
def keepInBounds(ordinal):\
  if ordinal >= PRINTABLE_ASCII_LIMIT:\
    while ordinal >= PRINTABLE_ASCII_LIMIT:\
      ordinal = ordinal - TOTAL_PRINTABLE_ASCII_CHARACTERS\
  elif ordinal < PRINTABLE_ASCII_MIN :\
    while ordinal < PRINTABLE_ASCII_MIN :\
      ordinal = ordinal + TOTAL_PRINTABLE_ASCII_CHARACTERS\
  else:\
    ordinal = ordinal\
  #print(ordinal)\
  return ordinal\
\
\
# Encrypt or decrypt message using rotationKey\
# param message (str)\
# param rotationKey (int)\
# invoke keepInBounds()    \
# return processedMessage (str)\
def processMessage(message, rotationKey):\
  processedMessage = ""\
  for char in message:\
      ordinal = ord(char)\
      ordinal += rotationKey\
      processedMessage += chr(keepInBounds(ordinal))\
      #print(processedMessage)\
  return processedMessage\
      \
\
# Main -----------------------------------------------------------------------\
\
# Gets plain text or cipher code, operation requested (encrypt or decrypt),\
#   and rotation key for Caesar cipher\
# Generates cipher code or plain text\
def main():\
  # Describe program\
  print("This program encrypts or decrypts messages " + \\\
        "using a Caesar cipher")\
\
  # Priming read and repeat\
  message = input("What is the message you would like to be processed : ")\
  while message:\
  \
    # Get remaining inputs, validate and convert as necessary  \
    print("Would you like to encrypt or decrypt the following\\\
 message?")\
    operation = input("Enter <E> for encryption or <D> for decryption : ")\
    while not operationValidated(operation):\
      print("That is not a valid input. Please try again.")\
      operation =\\\
                input("Enter <E> for encryption or <D> for decryption : ")\
    rotationKey = input("Enter a rotation key or the rotation key that was\\\
 used: ")\
    while not rotationKeyValidated(rotationKey):\
      print("That is not a valid input. Please try again.")\
      rotationKey = input("Enter a rotation key or the rotation key that\\\
 was used: ")\
    rotationKey = convertRotationKey(operation, rotationKey)\
    #print(type(rotationKey))\
    \
    # Encrypt or decrypt contents of file\
    newMessage = processMessage(message, rotationKey)\
\
    # Display result\
    print("The message is: %s" % (newMessage,))\
    print("\\n")\
\
\
    # Continuation read\
    message = input("Enter a message to be processed or press <Enter>\\\
 to leave: ")\
\
main()\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
Python 3.4.3 (v3.4.3:9b73f1c3e601, Feb 23 2015, 02:52:03) \
[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\
Type "copyright", "credits" or "license()" for more information.\
>>> ================================ RESTART ================================\
>>> \
This program encrypts or decrypts messages using a Caesar cipher\
What is the message you would like to be processed : The quick brown fox jumps over the lazy dog\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : e\
Enter a rotation key or the rotation key that was used: 1\
The message is: Uif!rvjdl!cspxo!gpy!kvnqt!pwfs!uif!mb\{z!eph\
\
\
Enter a message to be processed or press <Enter> to leave: Uif!rvjdl!cspxo!gpy!kvnqt!pwfs!uif!mb\{z!eph\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : d\
Enter a rotation key or the rotation key that was used: 1\
The message is: The quick brown fox jumps over the lazy dog\
\
\
Enter a message to be processed or press <Enter> to leave: The quick brown fox jumps over the lazy dog\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : e\
Enter a rotation key or the rotation key that was used: -1\
The message is: Sgd~pthbj~aqnvm~enw~itlor~nudq~sgd~k`yx~cnf\
\
\
Enter a message to be processed or press <Enter> to leave: Sgd~pthbj~aqnvm~enw~itlor~nudq~sgd~k`yx~cnf\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : d\
Enter a rotation key or the rotation key that was used: -1\
The message is: The quick brown fox jumps over the lazy dog\
\
\
Enter a message to be processed or press <Enter> to leave: The quick brown fox jumps over the lazy dog\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : e\
Enter a rotation key or the rotation key that was used: 10\
The message is: ^ro*\{ smu*l|y"x*py#*t wz\}*y!o|*~ro*vk%$*nyq\
\
\
Enter a message to be processed or press <Enter> to leave: ^ro*\{ smu*l|y"x*py#*t wz\}*y!o|*~ro*vk%$*nyq\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : d\
Enter a rotation key or the rotation key that was used: 10\
The message is: The quick brown fox jumps over the lazy dog\
\
\
Enter a message to be processed or press <Enter> to leave: The quick brown fox jumps over the lazy dog\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : e\
Enter a rotation key or the rotation key that was used: -10\
The message is: J^[ugk_YauXhemdu\\enu`kcfiuel[huj^[ubWpouZe]\
\
\
Enter a message to be processed or press <Enter> to leave: J^[ugk_YauXhemdu\\enu`kcfiuel[huj^[ubWpouZe]\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : d\
Enter a rotation key or the rotation key that was used: -10\
The message is: The quick brown fox jumps over the lazy dog\
\
\
Enter a message to be processed or press <Enter> to leave: The quick brown fox jumps over the lazy dog\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : e\
Enter a rotation key or the rotation key that was used: 95\
The message is: The quick brown fox jumps over the lazy dog\
\
\
Enter a message to be processed or press <Enter> to leave: The quick brown fox jumps over the lazy dog\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : d\
Enter a rotation key or the rotation key that was used: 95\
The message is: The quick brown fox jumps over the lazy dog\
\
\
Enter a message to be processed or press <Enter> to leave: The quick brown fox jumps over the lazy dog\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : 127\
That is not a valid input. Please try again.\
Enter <E> for encyption or <D> for decryption : e\
Enter a rotation key or the rotation key that was used: 127\
The message is: t)&@26*$,@#308/@'09@+6.14@07&3@5)&@-";:@%0(\
\
\
Enter a message to be processed or press <Enter> to leave: t)&@26*$,@#308/@'09@+6.14@07&3@5)&@-";:@%0(\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : d\
Enter a rotation key or the rotation key that was used: 127\
The message is: The quick brown fox jumps over the lazy dog\
\
\
Enter a message to be processed or press <Enter> to leave: The quick brown fox jumps over the lazy dog\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : e\
Enter a rotation key or the rotation key that was used: -127\
The message is: 4HE_QUICK_BROWN_FOX_JUMPS_OVER_THE_LAZY_DOG\
\
\
Enter a message to be processed or press <Enter> to leave: 4HE_QUICK_BROWN_FOX_JUMPS_OVER_THE_LAZY_DOG\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : d\
Enter a rotation key or the rotation key that was used: -127\
The message is: The quick brown fox jumps over the lazy dog\
\
\
Enter a message to be processed or press <Enter> to leave: The quick brown fox jumps over the lazy dog\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : e\
Enter a rotation key or the rotation key that was used: 570\
The message is: The quick brown fox jumps over the lazy dog\
\
\
Enter a message to be processed or press <Enter> to leave: The quick brown fox jumps over the lazy dog\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : d\
Enter a rotation key or the rotation key that was used: 570\
The message is: The quick brown fox jumps over the lazy dog\
\
\
Enter a message to be processed or press <Enter> to leave: The quick brown fox jumps over the lazy dog\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : e\
Enter a rotation key or the rotation key that was used: -570\
The message is: The quick brown fox jumps over the lazy dog\
\
\
Enter a message to be processed or press <Enter> to leave: The quick brown fox jumps over the lazy dog\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : d\
Enter a rotation key or the rotation key that was used: -570\
The message is: The quick brown fox jumps over the lazy dog\
\
\
Enter a message to be processed or press <Enter> to leave: Validation Tests\
Would you like to encrypt or decrypt the following message?\
Enter <E> for encryption or <D> for decryption : y\
That is not a valid input. Please try again.\
Enter <E> for encyption or <D> for decryption : y\
That is not a valid input. Please try again.\
Enter <E> for encyption or <D> for decryption : 6\
That is not a valid input. Please try again.\
Enter <E> for encyption or <D> for decryption : 7\
That is not a valid input. Please try again.\
Enter <E> for encyption or <D> for decryption : e\
Enter a rotation key or the rotation key that was used: fds\
That is not a valid input. Please try again.\
Enter a rotation key or the rotation key that was used: fasdfsa\
That is not a valid input. Please try again.\
Enter a rotation key or the rotation key that was used: 12ed\
That is not a valid input. Please try again.\
Enter a rotation key or the rotation key that was used: 121\
The message is: p\{'$~\{/$*):n ./.\
\
\
Enter a message to be processed or press <Enter> to leave: \
>>> }